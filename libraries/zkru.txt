meta version "v2.2,js,ctx,refs,localcloud,unicodemodel,allasync,upperplex";
meta name "blank app";
meta icon "AddressBook";
meta rootId "xPVLZKRfDmGiasdkBt2RaNR4";
meta allowExport "yes";
meta hasIds "yes";
meta platform "current";
meta parentIds "";
#theme meta import theme {
  pub "gnvi"
  usage {
    action `async` title_1()
    action `async` title_2()
    action `async` title_3()
    action `async` subtle()
    action `async` normal()
    action `sync` example()
    action `async` accent()
    action `async` set_right_aligned(value: Boolean)
    action `async` huge()
  }
}
#main
action main(#Ihh8LrOVwwe0ATy9 \u2756: * main_page_data) {
  #rTkwJNKH36vu1SQP if box→is_init then {
    #UkwGgcl6Ou0sTsOy skip;
  }
  #rx13Qo8nI4IGE0b8 if true then {
    #R32j1dIgjjvaZC0t skip;
  }
  meta page;
  meta sync;
}
#BbWFpbiBwYWdlIGRhdGEa
table main_page_data {
  type = "Object";
  persistent = false;
}
#joyBVYYnbWlPww8E meta import forms {
  pub "cnfhc"
  usage {
    action `sync` `type` display_code()
    action `sync` `type` validator(s: String) returns(error: String)
    action `sync` button(text: String, body: Action)
    action `sync` checkbox(text: String, checked: Ref[Boolean])
    action `sync` input_string_collection(label: String, strings: Collection[String])
    action `sync` input_text_line(label: String, text: Ref[String])
    action `sync` input_text_area(label: String, text: Ref[String])
    action `sync` input_password(label: String, password: Ref[String])
    action `sync` input_number(label: String, text: Ref[String], changehandler: Number_Action)
    action `sync` labeled_content(label: String, content: ♻ forms → display_code)
    action `sync` indented_content(content: ♻ forms → display_code)
    action `sync` input_choice(label: String, choices: Collection[String], index: Ref[Number])
    action `sync` input_text_line_w\u002f_validator(label: String, text: Ref[String], errorcheck: ♻ forms → validator, changehandler: Text_Action)
  }
}
#LHF2iIBnkOQcwhcoQKFiR4A2 meta import widgets {
  pub "abgjb"
  usage {
    action `sync` message(user: User, dt: DateTime, text: String)
    action `sync` picture(url: String)
  }
}
#iDxzKDq4042OKy7IX4V4D91F meta import layout {
  pub "cwgn"
  usage {
    action `sync` stretch_and_center()
    action `async` grid_of_squares(cell_content: Number_Action, count: Number, grid_width: Number, grid_height: Number)
    action `async` horizontal_hub_of_squares(cell_content: Number_Action, count: Number, cell_size: Number, group_width: Number, total_height: Number)
    action `async` vertical_hub_of_squares(cell_content: Number_Action, count: Number, cell_size: Number, total_width: Number, group_height: Number)
  }
}
